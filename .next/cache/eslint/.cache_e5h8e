[{"E:\\Works\\devlancer.github.io\\pages\\about\\index.tsx":"1","E:\\Works\\devlancer.github.io\\pages\\api\\hello.ts":"2","E:\\Works\\devlancer.github.io\\pages\\contact\\index.tsx":"3","E:\\Works\\devlancer.github.io\\pages\\index.tsx":"4","E:\\Works\\devlancer.github.io\\pages\\resume\\index.tsx":"5","E:\\Works\\devlancer.github.io\\pages\\services\\index.tsx":"6","E:\\Works\\devlancer.github.io\\pages\\testimonials\\index.tsx":"7","E:\\Works\\devlancer.github.io\\pages\\welcome\\index.tsx":"8","E:\\Works\\devlancer.github.io\\pages\\welcome\\ping.tsx":"9","E:\\Works\\devlancer.github.io\\pages\\works\\index.tsx":"10","E:\\Works\\devlancer.github.io\\pages\\_app.tsx":"11","E:\\Works\\devlancer.github.io\\components\\carousel.tsx":"12","E:\\Works\\devlancer.github.io\\components\\close.tsx":"13","E:\\Works\\devlancer.github.io\\components\\contact\\contactBlock.tsx":"14","E:\\Works\\devlancer.github.io\\components\\contact\\contactInput.tsx":"15","E:\\Works\\devlancer.github.io\\components\\footer.tsx":"16","E:\\Works\\devlancer.github.io\\components\\heading\\HeaderTitle.tsx":"17","E:\\Works\\devlancer.github.io\\components\\heading\\HeaderWrapper.tsx":"18","E:\\Works\\devlancer.github.io\\components\\heading\\SpecialHeading.tsx":"19","E:\\Works\\devlancer.github.io\\components\\heading\\Title.tsx":"20","E:\\Works\\devlancer.github.io\\components\\heading\\TitleText.tsx":"21","E:\\Works\\devlancer.github.io\\components\\history\\blankItem.tsx":"22","E:\\Works\\devlancer.github.io\\components\\historyItem.tsx":"23","E:\\Works\\devlancer.github.io\\components\\layout\\index.tsx":"24","E:\\Works\\devlancer.github.io\\components\\layout\\resume\\resumeLayout.tsx":"25","E:\\Works\\devlancer.github.io\\components\\particleBackground.tsx":"26","E:\\Works\\devlancer.github.io\\components\\preloader\\afterloader.tsx":"27","E:\\Works\\devlancer.github.io\\components\\preloader\\index.tsx":"28","E:\\Works\\devlancer.github.io\\components\\preloader\\Item.tsx":"29","E:\\Works\\devlancer.github.io\\components\\resume\\ModalDiv.tsx":"30","E:\\Works\\devlancer.github.io\\components\\resume\\ResumeBuild.tsx":"31","E:\\Works\\devlancer.github.io\\components\\resume\\ResumeModal.tsx":"32","E:\\Works\\devlancer.github.io\\components\\serviceHex.tsx":"33","E:\\Works\\devlancer.github.io\\components\\Testimonials\\getImages.tsx":"34","E:\\Works\\devlancer.github.io\\components\\Testimonials\\slideData.tsx":"35","E:\\Works\\devlancer.github.io\\components\\Testimonials.tsx":"36","E:\\Works\\devlancer.github.io\\components\\welcome\\profileBar.tsx":"37","E:\\Works\\devlancer.github.io\\components\\workItem.tsx":"38"},{"size":5425,"mtime":1649073182843,"results":"39","hashOfConfig":"40"},{"size":307,"mtime":1647925092965,"results":"41","hashOfConfig":"40"},{"size":4276,"mtime":1649072910945,"results":"42","hashOfConfig":"40"},{"size":5278,"mtime":1649072912181,"results":"43","hashOfConfig":"40"},{"size":851,"mtime":1648994945344,"results":"44","hashOfConfig":"40"},{"size":1043,"mtime":1648833183193,"results":"45","hashOfConfig":"40"},{"size":1050,"mtime":1648994732029,"results":"46","hashOfConfig":"40"},{"size":2503,"mtime":1649072893520,"results":"47","hashOfConfig":"40"},{"size":779,"mtime":1648911880534,"results":"48","hashOfConfig":"40"},{"size":1354,"mtime":1648817658820,"results":"49","hashOfConfig":"40"},{"size":192,"mtime":1648685779154,"results":"50","hashOfConfig":"40"},{"size":933,"mtime":1648992809968,"results":"51","hashOfConfig":"40"},{"size":382,"mtime":1649158679286,"results":"52","hashOfConfig":"40"},{"size":1360,"mtime":1649013663734,"results":"53","hashOfConfig":"40"},{"size":1525,"mtime":1648568653229,"results":"54","hashOfConfig":"40"},{"size":3299,"mtime":1649158817436,"results":"55","hashOfConfig":"40"},{"size":347,"mtime":1648994767352,"results":"56","hashOfConfig":"40"},{"size":279,"mtime":1648817770639,"results":"57","hashOfConfig":"40"},{"size":442,"mtime":1648564302465,"results":"58","hashOfConfig":"40"},{"size":530,"mtime":1648735685954,"results":"59","hashOfConfig":"40"},{"size":135,"mtime":1648580642878,"results":"60","hashOfConfig":"40"},{"size":237,"mtime":1648899285068,"results":"61","hashOfConfig":"40"},{"size":3246,"mtime":1648996380506,"results":"62","hashOfConfig":"40"},{"size":5725,"mtime":1649158878940,"results":"63","hashOfConfig":"40"},{"size":549,"mtime":1648925684737,"results":"64","hashOfConfig":"40"},{"size":256,"mtime":1648818175879,"results":"65","hashOfConfig":"40"},{"size":2514,"mtime":1648996406617,"results":"66","hashOfConfig":"40"},{"size":1240,"mtime":1648608990202,"results":"67","hashOfConfig":"40"},{"size":1787,"mtime":1648994239286,"results":"68","hashOfConfig":"40"},{"size":243,"mtime":1648831486996,"results":"69","hashOfConfig":"40"},{"size":4405,"mtime":1648995144183,"results":"70","hashOfConfig":"40"},{"size":3674,"mtime":1648996557586,"results":"71","hashOfConfig":"40"},{"size":1867,"mtime":1648817036719,"results":"72","hashOfConfig":"40"},{"size":489,"mtime":1648920451883,"results":"73","hashOfConfig":"40"},{"size":3252,"mtime":1648996434263,"results":"74","hashOfConfig":"40"},{"size":2409,"mtime":1648922408204,"results":"75","hashOfConfig":"40"},{"size":273,"mtime":1648912215457,"results":"76","hashOfConfig":"40"},{"size":213,"mtime":1648994872962,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"97mg5s",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Works\\devlancer.github.io\\pages\\about\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\api\\hello.ts",[],[],"E:\\Works\\devlancer.github.io\\pages\\contact\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\resume\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\services\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\testimonials\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\welcome\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\welcome\\ping.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\works\\index.tsx",[],[],"E:\\Works\\devlancer.github.io\\pages\\_app.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\carousel.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\close.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\contact\\contactBlock.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\contact\\contactInput.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\footer.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\heading\\HeaderTitle.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\heading\\HeaderWrapper.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\heading\\SpecialHeading.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\heading\\Title.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\heading\\TitleText.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\history\\blankItem.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\historyItem.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\layout\\index.tsx",["196"],[],"import Head from \"next/head\";\r\nimport { Transition } from \"@headlessui/react\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport Router, { useRouter } from \"next/router\";\r\n\r\nimport Item from \"../preloader/Item\";\r\n\r\nimport Footer from \"../footer\";\r\nimport Background from \"../particleBackground\";\r\n\r\nimport links from \"../../resources/json/navInfo.json\";\r\n\r\nimport option from \"../../resources/data/afterload\";\r\nimport FantasyLoader from \"../preloader/afterloader\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\n\r\nconst getRadom = (array: any) => {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n};\r\n\r\nconst Layout = (props: any) => {\r\n  const rows = [\r\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n  ];\r\n  const [row, setRow] = useState(10);\r\n  const [ready, setReady] = useState(\"NONE\");\r\n  const [loading, setLoading] = useState(\"NONE\");\r\n\r\n  const router = useRouter();\r\n\r\n  const header = (\r\n    <Head>\r\n      <title>Smart Dev</title>\r\n      <meta name=\"description\" content=\"Web Developer\" />\r\n      <meta name=\"og:title\" content=\"Full Stack Dev Resume\" />\r\n      <meta name=\"twitter:card\" content=\"Web Developer\" />\r\n      <link\r\n        rel=\"icon\"\r\n        href=\"/favicon.ico\"\r\n        as={process.env.BACKEND_URL + \"/favicon.ico\"}\r\n      />\r\n    </Head>\r\n  );\r\n  let screenWidth: any;\r\n\r\n  var link =\r\n    (props.home && links.home) ||\r\n    (props.welcome && links.welcome) ||\r\n    (props.about && links.about) ||\r\n    (props.services && links.services) ||\r\n    (props.resume && links.resume) ||\r\n    (props.works && links.works) ||\r\n    (props.testimonials && links.testimonials) ||\r\n    (props.contact && links.contact);\r\n\r\n  useEffect(function mount() {\r\n    localStorage.setItem(\"width\", window.innerWidth.toString());\r\n    screenWidth = window.innerWidth;\r\n\r\n    setLoading(\"LOADING\");\r\n\r\n    // window.onkeydown = (e) => {\r\n    //   e.code === 'F12' && e.preventDefault();\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      {props.home && ready && <Background />}\r\n      {/* {props.home && ready && <Background />} */}\r\n      {header}\r\n      <div className=\"text-[#ababab] bg-[#0c0f15] overflow-y-scroll overflow-x-hidden md:overflow-hidden h-[100vh] \">\r\n        <main className=\"border-t-4 border-[#FA6862] font-medium leading-normal text-[#ababab]\">\r\n          <div className=\"w-full fill-height table relative\">\r\n            <Transition\r\n              show={loading !== \"NONE\"}\r\n              enter=\"transform transition duration-[500ms]\"\r\n              enterFrom={getRadom(option.enterFrom)}\r\n              enterTo=\"opacity-100 rotate-0 scale-100\"\r\n              leave=\"transform transition duration-[800ms] duration-[500ms]\"\r\n              leaveFrom=\"opacity-50 rotate-0\"\r\n              leaveTo={getRadom(option.leaveTo)}\r\n              afterEnter={() => {\r\n                ready === \"NONE\" && setTimeout(() => setReady(\"READY\"), 1000);\r\n                loading === \"UNLOADING\" &&\r\n                  ready === \"PREV\" &&\r\n                  router.push(link[0]);\r\n                loading === \"UNLOADING\" &&\r\n                  ready === \"NEXT\" &&\r\n                  router.push(link[1]);\r\n              }}\r\n              // beforeLeave={() => setReady(true)}\r\n            >\r\n              <FantasyLoader />\r\n            </Transition>\r\n            {/* {ready && <FantasyLoader />} */}\r\n\r\n            <Transition\r\n              show={ready === \"READY\"}\r\n              enter=\"transform transition duration-[500ms] delay-[300ms]\"\r\n              enterFrom=\"opacity-0 scale-[0.7]\"\r\n              enterTo=\"opacity-100 rotate-0 scale-100\"\r\n              leave=\"transform transition duration-[500ms]\"\r\n              leaveFrom=\"opacity-100 rotate-0 scale-100 \"\r\n              leaveTo=\"opacity-0 scale-[0.8]\"\r\n              beforeEnter={() => {\r\n                loading === \"LOADING\" && setLoading(\"NONE\");\r\n              }}\r\n              afterLeave={() => setLoading(\"UNLOADING\")}\r\n            >\r\n              <div className=\"table-cell align-middle relative page-about w-[100vw] h-[100vh] pb-[60px] md:pb-0 pt-[50px] md:pt-0 cursor-default\">\r\n                {props.children}\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n        </main>\r\n        {/* <Footer next={link[1]} prev={link[0]} /> */}\r\n      </div>\r\n      {loading !== \"NONE\" && (\r\n        <div className=\"w-full absolute bottom-3  z-10 flex justify-center\">\r\n          <div className=\"bg-black animate-spin text-white bg-opacity-70 p-[20px] rounded-full flex justify-between items-center\">\r\n            <FaSpinner />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading !== \"LOADING\" && ready === \"READY\" && (\r\n        <div className=\"px-[5vw] w-[100vw] absolute bottom-3 text-[#ababab] text-[16px] z-10\">\r\n          <div className=\"bg-black animate-pulse hover:animate-none bg-opacity-70 w-full h-[40px] rounded-3xl flex justify-between items-center px-[2vw]\">\r\n            <span\r\n              className=\"prev-page hover:text-white cursor-pointer\"\r\n              onClick={() => link[0] !== null && setReady(\"PREV\")}\r\n            >\r\n              ← Prev Page\r\n            </span>\r\n            <span className=\"copyright\">\r\n              2018 - {new Date().getFullYear()}\r\n              <span className=\"invisible sm:visible pl-2\">\r\n                Full-Stack Web Developer, Freelancing\r\n              </span>\r\n            </span>\r\n            <span\r\n              className=\"next-page hover:text-white cursor-pointer\"\r\n              onClick={() => link[1] !== null && setReady(\"NEXT\")}\r\n            >\r\n              Next Page →\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","E:\\Works\\devlancer.github.io\\components\\layout\\resume\\resumeLayout.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\particleBackground.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\preloader\\afterloader.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\preloader\\index.tsx",["197"],[],"import { useEffect, useState } from 'react';\r\nimport useInterval from '../../hook/hookInterval';\r\n\r\nconst Preloader = (props: any) => {\r\n  const [load, setLoad] = useState<number>(40);\r\n  const delay = 10;\r\n\r\n  useInterval(\r\n    () => {\r\n      // Your custom logic here\r\n      setLoad(load - 1);\r\n    },\r\n    // Delay in milliseconds or null to stop it\r\n    load >= -25 ? delay : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    load <= -25 && props.getReady(true);\r\n  }, [load]);\r\n\r\n  return (\r\n    <div className={load >= -25 ? 'preloader' : 'preloader active'}>\r\n      <div\r\n        style={{ width: load / 2 + '%' }}\r\n        className='loading-mask h-full left-0'\r\n      ></div>\r\n      <div\r\n        style={{ width: (load + 6) / 2 + '%' }}\r\n        className='loading-mask h-full left-[20%]'\r\n      ></div>\r\n      <div\r\n        style={{ width: (load + 12) / 2 + '%' }}\r\n        className='loading-mask h-full left-[40%]'\r\n      ></div>\r\n      <div\r\n        style={{ width: (load + 18) / 2 + '%' }}\r\n        className='loading-mask h-full left-[60%]'\r\n      ></div>\r\n      <div\r\n        style={{ width: (load + 24) / 2 + '%' }}\r\n        className='loading-mask h-full left-[80%]'\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","E:\\Works\\devlancer.github.io\\components\\preloader\\Item.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\resume\\ModalDiv.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\resume\\ResumeBuild.tsx",["198"],[],"import Link from 'next/link';\r\nimport { useEffect, useState } from 'react';\r\nimport { FaToggleOff, FaToggleOn } from 'react-icons/fa';\r\n\r\nimport ResumeModal from '../../components/resume/ResumeModal';\r\n\r\nimport SpecialHeading from '../heading/SpecialHeading';\r\nimport HistoryItem from '../historyItem';\r\n\r\nconst ResumeBuild = (props: any) => {\r\n  const [state, setState] = useState({\r\n    visiblity: false,\r\n    type: 'Education',\r\n    id: 0,\r\n  });\r\n  const [pos, setPos] = useState({ x: 0, y: 0 });\r\n  const [mode, setMode] = useState<boolean>(false);\r\n  const zClass = [\r\n    'w-full lg:mx-0 z-[2] bg-[#11151d]',\r\n    'w-full lg:mx-0 z-[1] bg-[#11151d]',\r\n  ];\r\n\r\n  const positionValidate = (e: any) => {\r\n    let width = window.innerWidth;\r\n    if (e.screenY / 16 < 21.5) {\r\n      setState({ visiblity: false, type: state.type, id: state.id });\r\n      return;\r\n    }\r\n\r\n    if (e.screenY / 16 > 48) {\r\n      setState({ visiblity: false, type: state.type, id: state.id });\r\n      return;\r\n    }\r\n    if (e.screenX <= (width - 1170) / 2) {\r\n      setState({ visiblity: false, type: state.type, id: state.id });\r\n      return;\r\n    }\r\n    if (e.screenX >= 1170 + (width - 1170) / 2) {\r\n      setState({ visiblity: false, type: state.type, id: state.id });\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Math.floor(Math.random() * 10) > 5) {\r\n      window.onmousemove = (e: any) => {\r\n        positionValidate(e);\r\n\r\n        setPos({ x: e.screenX, y: e.screenY });\r\n      };\r\n    }\r\n  }, [state]);\r\n\r\n  const handleWatch = (visiblity: any, type: any, id: number) => {\r\n    const tempState = {\r\n      visiblity: visiblity,\r\n      type: type,\r\n      id: id,\r\n    };\r\n    setState(tempState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='flex gap-5 mb-2 justify-end'>\r\n        {mode ? 'Turn off large tooltip:' : 'Turn on large tooltip:'}\r\n        {mode ? (\r\n          <FaToggleOn\r\n            className='text-[30px] cursor-pointer'\r\n            onClick={(e) => setMode(false)}\r\n          />\r\n        ) : (\r\n          <FaToggleOff\r\n            className='text-[30px] cursor-pointer'\r\n            onClick={(e) => {\r\n              let width = localStorage.getItem('width');\r\n              let trueWidth = width ? parseInt(width) : 1600;\r\n              trueWidth >= 1600\r\n                ? setMode(true)\r\n                : alert('This option requires a resolution of 1600px width.');\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='resume flex flex-col lg:flex-row pb-9 gap-5 lg:gap-0'>\r\n        {props.data.map((one: any, index: number) => {\r\n          return (\r\n            <div key={index} className={zClass[index % zClass.length]}>\r\n              <div className='history-block bg-[#1e2530]'>\r\n                <div className='section-title light clear border-b-[1px] border-solid border-[#293342] py-[15px] px-[34px]'>\r\n                  <SpecialHeading>\r\n                    {one.title + ' (' + one.data.length + ')'}\r\n                  </SpecialHeading>\r\n                </div>\r\n                <div className='history-scroller overflow-y-scroll outline-none max-h-full lg:max-h-[377px]'>\r\n                  {one.data.map((row: any, index: number) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <HistoryItem\r\n                          data={row}\r\n                          type={one.title}\r\n                          index={index}\r\n                          watch={(visiblity: any, type: any, id: number) =>\r\n                            handleWatch(visiblity, type, id)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  {one.data.length <= 2 && (\r\n                    <HistoryItem\r\n                      type={one.title}\r\n                      blank={true}\r\n                      index={one.data.length}\r\n                      watch={(visiblity: any, type: any, id: number) =>\r\n                        handleWatch(visiblity, type, id)\r\n                      }\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {state.visiblity && mode && (\r\n        <ResumeModal top={pos.y} left={pos.x} type={state.type} id={state.id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeBuild;\r\n","E:\\Works\\devlancer.github.io\\components\\resume\\ResumeModal.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\serviceHex.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\Testimonials\\getImages.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\Testimonials\\slideData.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\Testimonials.tsx",["199"],[],"import { Carousel } from 'react-responsive-carousel';\r\nimport Image from 'next/image';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader\r\n\r\n//import data from testimonial.json\r\nimport data from '../resources/json/testimonials.json';\r\nimport image1 from '../images/testimonials/1.jpg';\r\nimport SlideData from './Testimonials/slideData';\r\nimport getImages from './Testimonials/getImages';\r\n\r\nconst nClients = data.comments.filter(\r\n  (one) => one.job === 'Client' || one.job === 'CEO'\r\n).length;\r\nconst nDevelopers = data.comments.filter(\r\n  (one) => one.job === 'Developer'\r\n).length;\r\nconst nDesigners = data.comments.filter((one) => one.job === 'Designer').length;\r\n\r\nconst plans = [\r\n  {\r\n    type: 'Clients',\r\n    number: nClients,\r\n    says: '6 CPUs',\r\n  },\r\n  {\r\n    type: 'Developers',\r\n    number: nDevelopers,\r\n    says: '8 CPUs',\r\n  },\r\n  {\r\n    type: 'Designers',\r\n    number: nDesigners,\r\n    says: '12 CPUs',\r\n  },\r\n];\r\n\r\nconst TestimonialsCarousel = () => {\r\n  return (\r\n    <Carousel\r\n      autoPlay\r\n      stopOnHover\r\n      showArrows={true}\r\n      interval={4000}\r\n      showThumbs={false}\r\n      infiniteLoop={true}\r\n      className='max-w-full max-h-full p-1 border border-gray-600'\r\n    >\r\n      {data.comments.map((comment, index) => {\r\n        let image = getImages(index);\r\n        return (\r\n          <div key={index} className='text relative w-full h-[300px] testItem'>\r\n            <span className='absolute left-[2vw] top-[1vw]  rounded-full p-3 bg-black bg-opacity-60 w-fit flex'>\r\n              <span className='w-fit rounded-full flex border-solid border-[2px] bg-white border-gray-500 border-opacity-50 p-[4px]'>\r\n                {\r\n                  <Image\r\n                    src={image ? image : getImages(0)}\r\n                    width={150}\r\n                    height={150}\r\n                    className='rounded-full'\r\n                  ></Image>\r\n                }\r\n              </span>\r\n            </span>\r\n            <div className='w-full h-full exception'>\r\n              {SlideData[index % 3]}\r\n            </div>\r\n            <p className='absolute bottom-0 left-0 w-full bg-black bg-opacity-90 pt-2 pb-8 px-3'>\r\n              {comment.comment + ' (' + comment.name + ', ' + comment.job + ')'}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default TestimonialsCarousel;\r\n","E:\\Works\\devlancer.github.io\\components\\welcome\\profileBar.tsx",[],[],"E:\\Works\\devlancer.github.io\\components\\workItem.tsx",[],[],{"ruleId":"200","severity":1,"message":"201","line":58,"column":19,"nodeType":"202","endLine":58,"endColumn":36},{"ruleId":"200","severity":1,"message":"203","line":19,"column":6,"nodeType":"204","endLine":19,"endColumn":12,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"206","line":52,"column":6,"nodeType":"204","endLine":52,"endColumn":13,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":56,"column":19,"nodeType":"210","endLine":61,"endColumn":20},"react-hooks/exhaustive-deps","Assignments to the 'screenWidth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'positionValidate'. Either include it or remove the dependency array.",["212"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [load, props]",{"range":"217","text":"218"},"Update the dependencies array to be: [positionValidate, state]",{"range":"219","text":"220"},[462,468],"[load, props]",[1501,1508],"[positionValidate, state]"]